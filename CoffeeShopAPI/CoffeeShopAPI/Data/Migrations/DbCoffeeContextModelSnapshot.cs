// <auto-generated />
using System;
using CoffeeShopAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CoffeeShopAPI.Data.Migrations
{
    [DbContext(typeof(DbCoffeeContext))]
    partial class DbCoffeeContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CoffeeShopAPI.Data.Models.CoffeeType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DiscountId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int?>("ReceiptId")
                        .HasColumnType("int");

                    b.Property<int>("Sku")
                        .HasColumnType("int");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DiscountId");

                    b.HasIndex("ReceiptId");

                    b.ToTable("CoffeeTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Coffee with milk",
                            Name = "Latte",
                            Price = 4.5,
                            Sku = 45,
                            Stock = 10
                        },
                        new
                        {
                            Id = 2,
                            Description = "A cappuccino is an espresso-based coffee drink that originated in Italy",
                            Name = "Cappuccino",
                            Price = 2.5,
                            Sku = 46,
                            Stock = 1
                        },
                        new
                        {
                            Id = 3,
                            Description = "If you call it an Expresso you get barred for life",
                            Name = "Espresso",
                            Price = 13.99,
                            Sku = 99,
                            Stock = 0
                        });
                });

            modelBuilder.Entity("CoffeeShopAPI.Data.Models.Discount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AmountPercent")
                        .HasColumnType("int");

                    b.Property<bool>("Applied")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Discounts");
                });

            modelBuilder.Entity("CoffeeShopAPI.Data.Models.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("amount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("CoffeeShopAPI.Data.Models.Receipt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("HasPaid")
                        .HasColumnType("bit");

                    b.Property<int?>("PaymentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PaymentId");

                    b.ToTable("Receipts");
                });

            modelBuilder.Entity("CoffeeShopAPI.Data.Models.Topping", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Cost")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ReceiptId")
                        .HasColumnType("int");

                    b.Property<int>("Sku")
                        .HasColumnType("int");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ReceiptId");

                    b.ToTable("Toppings");
                });

            modelBuilder.Entity("CoffeeShopAPI.Data.Models.CoffeeType", b =>
                {
                    b.HasOne("CoffeeShopAPI.Data.Models.Discount", "Discount")
                        .WithMany()
                        .HasForeignKey("DiscountId");

                    b.HasOne("CoffeeShopAPI.Data.Models.Receipt", null)
                        .WithMany("CoffeeTypes")
                        .HasForeignKey("ReceiptId");

                    b.Navigation("Discount");
                });

            modelBuilder.Entity("CoffeeShopAPI.Data.Models.Receipt", b =>
                {
                    b.HasOne("CoffeeShopAPI.Data.Models.Payment", "Payment")
                        .WithMany()
                        .HasForeignKey("PaymentId");

                    b.Navigation("Payment");
                });

            modelBuilder.Entity("CoffeeShopAPI.Data.Models.Topping", b =>
                {
                    b.HasOne("CoffeeShopAPI.Data.Models.Receipt", null)
                        .WithMany("Toppings")
                        .HasForeignKey("ReceiptId");
                });

            modelBuilder.Entity("CoffeeShopAPI.Data.Models.Receipt", b =>
                {
                    b.Navigation("CoffeeTypes");

                    b.Navigation("Toppings");
                });
#pragma warning restore 612, 618
        }
    }
}
